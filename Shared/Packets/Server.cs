// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: server.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServerPackets {

  /// <summary>Holder for reflection information generated from server.proto</summary>
  public static partial class ServerReflection {

    #region Descriptor
    /// <summary>File descriptor for server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzZXJ2ZXIucHJvdG8SDVNlcnZlclBhY2tldHMiiQEKB0NyY0xpc3QSLQoF",
            "aXRlbXMYASADKAsyHi5TZXJ2ZXJQYWNrZXRzLkNyY0xpc3QuQ3JjSXRlbRpP",
            "CgdDcmNJdGVtEgwKBHBhdGgYASABKAkSCwoDY3JjGAIgASgNEgwKBHNpemUY",
            "AyABKAQSDgoGZmlsZUlkGAQgASgEEgsKA3VybBgFIAEoCSJtCglDcmNVcGRh",
            "dGUSLwoHdXBkYXRlZBgBIAMoCzIeLlNlcnZlclBhY2tldHMuQ3JjTGlzdC5D",
            "cmNJdGVtEi8KB3JlbW92ZWQYAiADKAsyHi5TZXJ2ZXJQYWNrZXRzLkNyY0xp",
            "c3QuQ3JjSXRlbSIkChBEb3dubG9hZExvY2thYmxlEhAKCGlzTG9ja2VkGAEg",
            "ASgIIh0KC0ZpbGVzUmVtb3ZlEg4KBnBhdGhlcxgBIAMoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServerPackets.CrcList), global::ServerPackets.CrcList.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ServerPackets.CrcList.Types.CrcItem), global::ServerPackets.CrcList.Types.CrcItem.Parser, new[]{ "Path", "Crc", "Size", "FileId", "Url" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServerPackets.CrcUpdate), global::ServerPackets.CrcUpdate.Parser, new[]{ "Updated", "Removed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServerPackets.DownloadLockable), global::ServerPackets.DownloadLockable.Parser, new[]{ "IsLocked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServerPackets.FilesRemove), global::ServerPackets.FilesRemove.Parser, new[]{ "Pathes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Standard crc response
  /// </summary>
  public sealed partial class CrcList : pb::IMessage<CrcList> {
    private static readonly pb::MessageParser<CrcList> _parser = new pb::MessageParser<CrcList>(() => new CrcList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrcList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServerPackets.ServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrcList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrcList(CrcList other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrcList Clone() {
      return new CrcList(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServerPackets.CrcList.Types.CrcItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::ServerPackets.CrcList.Types.CrcItem.Parser);
    private readonly pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem> items_ = new pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrcList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrcList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrcList other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CrcList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CrcItem : pb::IMessage<CrcItem> {
        private static readonly pb::MessageParser<CrcItem> _parser = new pb::MessageParser<CrcItem>(() => new CrcItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CrcItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::ServerPackets.CrcList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CrcItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CrcItem(CrcItem other) : this() {
          path_ = other.path_;
          crc_ = other.crc_;
          size_ = other.size_;
          fileId_ = other.fileId_;
          url_ = other.url_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CrcItem Clone() {
          return new CrcItem(this);
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 1;
        private string path_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "crc" field.</summary>
        public const int CrcFieldNumber = 2;
        private uint crc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Crc {
          get { return crc_; }
          set {
            crc_ = value;
          }
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 3;
        private ulong size_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        /// <summary>Field number for the "fileId" field.</summary>
        public const int FileIdFieldNumber = 4;
        private ulong fileId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong FileId {
          get { return fileId_; }
          set {
            fileId_ = value;
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 5;
        private string url_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CrcItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CrcItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Path != other.Path) return false;
          if (Crc != other.Crc) return false;
          if (Size != other.Size) return false;
          if (FileId != other.FileId) return false;
          if (Url != other.Url) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (Crc != 0) hash ^= Crc.GetHashCode();
          if (Size != 0UL) hash ^= Size.GetHashCode();
          if (FileId != 0UL) hash ^= FileId.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Path.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Path);
          }
          if (Crc != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Crc);
          }
          if (Size != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(Size);
          }
          if (FileId != 0UL) {
            output.WriteRawTag(32);
            output.WriteUInt64(FileId);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Url);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (Crc != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Crc);
          }
          if (Size != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
          }
          if (FileId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileId);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CrcItem other) {
          if (other == null) {
            return;
          }
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          if (other.Crc != 0) {
            Crc = other.Crc;
          }
          if (other.Size != 0UL) {
            Size = other.Size;
          }
          if (other.FileId != 0UL) {
            FileId = other.FileId;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Path = input.ReadString();
                break;
              }
              case 16: {
                Crc = input.ReadUInt32();
                break;
              }
              case 24: {
                Size = input.ReadUInt64();
                break;
              }
              case 32: {
                FileId = input.ReadUInt64();
                break;
              }
              case 42: {
                Url = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// One of crc items is updated
  /// </summary>
  public sealed partial class CrcUpdate : pb::IMessage<CrcUpdate> {
    private static readonly pb::MessageParser<CrcUpdate> _parser = new pb::MessageParser<CrcUpdate>(() => new CrcUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrcUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServerPackets.ServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrcUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrcUpdate(CrcUpdate other) : this() {
      updated_ = other.updated_.Clone();
      removed_ = other.removed_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrcUpdate Clone() {
      return new CrcUpdate(this);
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServerPackets.CrcList.Types.CrcItem> _repeated_updated_codec
        = pb::FieldCodec.ForMessage(10, global::ServerPackets.CrcList.Types.CrcItem.Parser);
    private readonly pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem> updated_ = new pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem> Updated {
      get { return updated_; }
    }

    /// <summary>Field number for the "removed" field.</summary>
    public const int RemovedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ServerPackets.CrcList.Types.CrcItem> _repeated_removed_codec
        = pb::FieldCodec.ForMessage(18, global::ServerPackets.CrcList.Types.CrcItem.Parser);
    private readonly pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem> removed_ = new pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServerPackets.CrcList.Types.CrcItem> Removed {
      get { return removed_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrcUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrcUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!updated_.Equals(other.updated_)) return false;
      if(!removed_.Equals(other.removed_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= updated_.GetHashCode();
      hash ^= removed_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      updated_.WriteTo(output, _repeated_updated_codec);
      removed_.WriteTo(output, _repeated_removed_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += updated_.CalculateSize(_repeated_updated_codec);
      size += removed_.CalculateSize(_repeated_removed_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrcUpdate other) {
      if (other == null) {
        return;
      }
      updated_.Add(other.updated_);
      removed_.Add(other.removed_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            updated_.AddEntriesFrom(input, _repeated_updated_codec);
            break;
          }
          case 18: {
            removed_.AddEntriesFrom(input, _repeated_removed_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Global lock/unlock downloads
  /// </summary>
  public sealed partial class DownloadLockable : pb::IMessage<DownloadLockable> {
    private static readonly pb::MessageParser<DownloadLockable> _parser = new pb::MessageParser<DownloadLockable>(() => new DownloadLockable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadLockable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServerPackets.ServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadLockable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadLockable(DownloadLockable other) : this() {
      isLocked_ = other.isLocked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadLockable Clone() {
      return new DownloadLockable(this);
    }

    /// <summary>Field number for the "isLocked" field.</summary>
    public const int IsLockedFieldNumber = 1;
    private bool isLocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLocked {
      get { return isLocked_; }
      set {
        isLocked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadLockable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadLockable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsLocked != other.IsLocked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsLocked != false) hash ^= IsLocked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsLocked != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsLocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsLocked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadLockable other) {
      if (other == null) {
        return;
      }
      if (other.IsLocked != false) {
        IsLocked = other.IsLocked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsLocked = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server send remove files
  /// </summary>
  public sealed partial class FilesRemove : pb::IMessage<FilesRemove> {
    private static readonly pb::MessageParser<FilesRemove> _parser = new pb::MessageParser<FilesRemove>(() => new FilesRemove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilesRemove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServerPackets.ServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilesRemove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilesRemove(FilesRemove other) : this() {
      pathes_ = other.pathes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilesRemove Clone() {
      return new FilesRemove(this);
    }

    /// <summary>Field number for the "pathes" field.</summary>
    public const int PathesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_pathes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> pathes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Pathes {
      get { return pathes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilesRemove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilesRemove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pathes_.Equals(other.pathes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pathes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pathes_.WriteTo(output, _repeated_pathes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pathes_.CalculateSize(_repeated_pathes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilesRemove other) {
      if (other == null) {
        return;
      }
      pathes_.Add(other.pathes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pathes_.AddEntriesFrom(input, _repeated_pathes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
