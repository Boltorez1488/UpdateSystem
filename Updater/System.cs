// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: system.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SystemConfig {

  /// <summary>Holder for reflection information generated from system.proto</summary>
  public static partial class SystemReflection {

    #region Descriptor
    /// <summary>File descriptor for system.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SystemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzeXN0ZW0ucHJvdG8SDFN5c3RlbUNvbmZpZyI0CglXaW5QYXJhbXMSCQoB",
            "dxgBIAEoBRIJCgFoGAIgASgFEhEKCW1heGltaXplZBgDIAEoCCJHCgxEb3du",
            "bG9hZEluZm8SCgoCaWQYASABKAQSCwoDY3JjGAIgASgNEgwKBHBhdGgYAyAB",
            "KAkSEAoIY2hlY2tDcmMYBCABKA0iXAoGQ29uZmlnEiQKA3dpbhgBIAEoCzIX",
            "LlN5c3RlbUNvbmZpZy5XaW5QYXJhbXMSLAoIZG93bmxvYWQYAiABKAsyGi5T",
            "eXN0ZW1Db25maWcuRG93bmxvYWRJbmZvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SystemConfig.WinParams), global::SystemConfig.WinParams.Parser, new[]{ "W", "H", "Maximized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SystemConfig.DownloadInfo), global::SystemConfig.DownloadInfo.Parser, new[]{ "Id", "Crc", "Path", "CheckCrc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SystemConfig.Config), global::SystemConfig.Config.Parser, new[]{ "Win", "Download" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WinParams : pb::IMessage<WinParams> {
    private static readonly pb::MessageParser<WinParams> _parser = new pb::MessageParser<WinParams>(() => new WinParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WinParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SystemConfig.SystemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WinParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WinParams(WinParams other) : this() {
      w_ = other.w_;
      h_ = other.h_;
      maximized_ = other.maximized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WinParams Clone() {
      return new WinParams(this);
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 1;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "h" field.</summary>
    public const int HFieldNumber = 2;
    private int h_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int H {
      get { return h_; }
      set {
        h_ = value;
      }
    }

    /// <summary>Field number for the "maximized" field.</summary>
    public const int MaximizedFieldNumber = 3;
    private bool maximized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Maximized {
      get { return maximized_; }
      set {
        maximized_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WinParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WinParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (W != other.W) return false;
      if (H != other.H) return false;
      if (Maximized != other.Maximized) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (W != 0) hash ^= W.GetHashCode();
      if (H != 0) hash ^= H.GetHashCode();
      if (Maximized != false) hash ^= Maximized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (W != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(W);
      }
      if (H != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(H);
      }
      if (Maximized != false) {
        output.WriteRawTag(24);
        output.WriteBool(Maximized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (H != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(H);
      }
      if (Maximized != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WinParams other) {
      if (other == null) {
        return;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.H != 0) {
        H = other.H;
      }
      if (other.Maximized != false) {
        Maximized = other.Maximized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            W = input.ReadInt32();
            break;
          }
          case 16: {
            H = input.ReadInt32();
            break;
          }
          case 24: {
            Maximized = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadInfo : pb::IMessage<DownloadInfo> {
    private static readonly pb::MessageParser<DownloadInfo> _parser = new pb::MessageParser<DownloadInfo>(() => new DownloadInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SystemConfig.SystemReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadInfo(DownloadInfo other) : this() {
      id_ = other.id_;
      crc_ = other.crc_;
      path_ = other.path_;
      checkCrc_ = other.checkCrc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadInfo Clone() {
      return new DownloadInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "crc" field.</summary>
    public const int CrcFieldNumber = 2;
    private uint crc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Crc {
      get { return crc_; }
      set {
        crc_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checkCrc" field.</summary>
    public const int CheckCrcFieldNumber = 4;
    private uint checkCrc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CheckCrc {
      get { return checkCrc_; }
      set {
        checkCrc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Crc != other.Crc) return false;
      if (Path != other.Path) return false;
      if (CheckCrc != other.CheckCrc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Crc != 0) hash ^= Crc.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (CheckCrc != 0) hash ^= CheckCrc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Crc != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Crc);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (CheckCrc != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CheckCrc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Crc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Crc);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (CheckCrc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CheckCrc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Crc != 0) {
        Crc = other.Crc;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.CheckCrc != 0) {
        CheckCrc = other.CheckCrc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Crc = input.ReadUInt32();
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
          case 32: {
            CheckCrc = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Config : pb::IMessage<Config> {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SystemConfig.SystemReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      win_ = other.win_ != null ? other.win_.Clone() : null;
      download_ = other.download_ != null ? other.download_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "win" field.</summary>
    public const int WinFieldNumber = 1;
    private global::SystemConfig.WinParams win_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SystemConfig.WinParams Win {
      get { return win_; }
      set {
        win_ = value;
      }
    }

    /// <summary>Field number for the "download" field.</summary>
    public const int DownloadFieldNumber = 2;
    private global::SystemConfig.DownloadInfo download_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SystemConfig.DownloadInfo Download {
      get { return download_; }
      set {
        download_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Win, other.Win)) return false;
      if (!object.Equals(Download, other.Download)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (win_ != null) hash ^= Win.GetHashCode();
      if (download_ != null) hash ^= Download.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (win_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Win);
      }
      if (download_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Download);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (win_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Win);
      }
      if (download_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Download);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.win_ != null) {
        if (win_ == null) {
          Win = new global::SystemConfig.WinParams();
        }
        Win.MergeFrom(other.Win);
      }
      if (other.download_ != null) {
        if (download_ == null) {
          Download = new global::SystemConfig.DownloadInfo();
        }
        Download.MergeFrom(other.Download);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (win_ == null) {
              Win = new global::SystemConfig.WinParams();
            }
            input.ReadMessage(Win);
            break;
          }
          case 18: {
            if (download_ == null) {
              Download = new global::SystemConfig.DownloadInfo();
            }
            input.ReadMessage(Download);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
